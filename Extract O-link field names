{"metadata": {"language_info": {"name": "python", "version": "3.11.5", "mimetype": "text/x-python", "codemirror_mode": {"name": "ipython", "version": 3}, "pygments_lexer": "ipython3", "nbconvert_exporter": "python", "file_extension": ".py"}, "kernelspec": {"name": "python3", "display_name": "Python 3 (ipykernel)", "language": "python"}}, "nbformat_minor": 4, "nbformat": 4, "cells": [{"cell_type": "code", "source": "import dxpy\nimport pandas as pd\nimport subprocess\nimport glob\nimport os\nimport pyspark\nfrom pyspark import SparkConf, SparkContext\nfrom pyspark.sql import SQLContext", "metadata": {"tags": []}, "execution_count": null, "outputs": []}, {"cell_type": "code", "source": "output_dir = \"/output/\"", "metadata": {"trusted": true, "tags": []}, "execution_count": 2, "outputs": []}, {"cell_type": "code", "source": "# Automatically discover dispensed dataset ID\ndispensed_dataset = dxpy.find_one_data_object(\n    typename=\"Dataset\", name=\"app*.dataset\", folder=\"/\", name_mode=\"glob\"\n)\ndispensed_dataset_id = dispensed_dataset[\"id\"]\n", "metadata": {"trusted": true, "tags": []}, "execution_count": 3, "outputs": []}, {"cell_type": "code", "source": "# Get project ID\nproject_id = dxpy.find_one_project()[\"id\"]\n", "metadata": {"trusted": true, "tags": []}, "execution_count": 4, "outputs": []}, {"cell_type": "code", "source": "dataset = (\":\").join([project_id, dispensed_dataset_id])", "metadata": {"trusted": true, "tags": []}, "execution_count": 5, "outputs": []}, {"cell_type": "code", "source": "# Note: This cell can only be run once. Otherwise, you'll need to delete the existing data tables in order to re-run\ncmd = [\"dx\", \"extract_dataset\", dataset, \"-ddd\", \"--delimiter\", \",\"]\nsubprocess.check_call(cmd)\n", "metadata": {"trusted": true, "tags": []}, "execution_count": 6, "outputs": [{"execution_count": 6, "output_type": "execute_result", "data": {"text/plain": "0"}, "metadata": {}}]}, {"cell_type": "code", "source": "path = os.getcwd()\n", "metadata": {"trusted": true, "tags": []}, "execution_count": 7, "outputs": []}, {"cell_type": "code", "source": "data_dict_csv = glob.glob(os.path.join(path, \"*.data_dictionary.csv\"))[0]\ndata_dict_df = pd.read_csv(data_dict_csv,low_memory=False)\ndata_dict_df.head()\n", "metadata": {"trusted": true, "tags": []}, "execution_count": 9, "outputs": [{"execution_count": 9, "output_type": "execute_result", "data": {"text/plain": "        entity   name     type primary_key_type coding_name  concept  \\\n0  participant    eid   string           global         NaN      NaN   \n1  participant  p3_i0  integer              NaN         NaN      NaN   \n2  participant  p3_i1  integer              NaN         NaN      NaN   \n3  participant  p3_i2  integer              NaN         NaN      NaN   \n4  participant  p3_i3  integer              NaN         NaN      NaN   \n\n   description                                        folder_path  \\\n0          NaN                            Participant Information   \n1          NaN  Assessment centre > Procedural metrics > Proce...   \n2          NaN  Assessment centre > Procedural metrics > Proce...   \n3          NaN  Assessment centre > Procedural metrics > Proce...   \n4          NaN  Assessment centre > Procedural metrics > Proce...   \n\n  is_multi_select is_sparse_coding  \\\n0             NaN              NaN   \n1             NaN              NaN   \n2             NaN              NaN   \n3             NaN              NaN   \n4             NaN              NaN   \n\n                                             linkout  longitudinal_axis_type  \\\n0                                                NaN                     NaN   \n1  http://biobank.ctsu.ox.ac.uk/crystal/field.cgi...                     NaN   \n2  http://biobank.ctsu.ox.ac.uk/crystal/field.cgi...                     NaN   \n3  http://biobank.ctsu.ox.ac.uk/crystal/field.cgi...                     NaN   \n4  http://biobank.ctsu.ox.ac.uk/crystal/field.cgi...                     NaN   \n\n  referenced_entity_field relationship  \\\n0                     NaN          NaN   \n1                     NaN          NaN   \n2                     NaN          NaN   \n3                     NaN          NaN   \n4                     NaN          NaN   \n\n                                    title    units  \n0                          Participant ID      NaN  \n1  Verbal interview duration | Instance 0  seconds  \n2  Verbal interview duration | Instance 1  seconds  \n3  Verbal interview duration | Instance 2  seconds  \n4  Verbal interview duration | Instance 3  seconds  ", "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>entity</th>\n      <th>name</th>\n      <th>type</th>\n      <th>primary_key_type</th>\n      <th>coding_name</th>\n      <th>concept</th>\n      <th>description</th>\n      <th>folder_path</th>\n      <th>is_multi_select</th>\n      <th>is_sparse_coding</th>\n      <th>linkout</th>\n      <th>longitudinal_axis_type</th>\n      <th>referenced_entity_field</th>\n      <th>relationship</th>\n      <th>title</th>\n      <th>units</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>participant</td>\n      <td>eid</td>\n      <td>string</td>\n      <td>global</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Participant Information</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Participant ID</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>participant</td>\n      <td>p3_i0</td>\n      <td>integer</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Assessment centre &gt; Procedural metrics &gt; Proce...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>http://biobank.ctsu.ox.ac.uk/crystal/field.cgi...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Verbal interview duration | Instance 0</td>\n      <td>seconds</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>participant</td>\n      <td>p3_i1</td>\n      <td>integer</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Assessment centre &gt; Procedural metrics &gt; Proce...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>http://biobank.ctsu.ox.ac.uk/crystal/field.cgi...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Verbal interview duration | Instance 1</td>\n      <td>seconds</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>participant</td>\n      <td>p3_i2</td>\n      <td>integer</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Assessment centre &gt; Procedural metrics &gt; Proce...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>http://biobank.ctsu.ox.ac.uk/crystal/field.cgi...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Verbal interview duration | Instance 2</td>\n      <td>seconds</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>participant</td>\n      <td>p3_i3</td>\n      <td>integer</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Assessment centre &gt; Procedural metrics &gt; Proce...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>http://biobank.ctsu.ox.ac.uk/crystal/field.cgi...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Verbal interview duration | Instance 3</td>\n      <td>seconds</td>\n    </tr>\n  </tbody>\n</table>\n</div>"}, "metadata": {}}]}, {"cell_type": "code", "source": "field_names = list(\n    data_dict_df.loc[data_dict_df[\"entity\"] == \"olink_instance_0\", \"name\"].values\n)\nprint(len(field_names))", "metadata": {"trusted": true, "tags": []}, "execution_count": 10, "outputs": [{"name": "stdout", "text": "2924\n", "output_type": "stream"}]}, {"cell_type": "code", "source": "field_names_str = [f\"olink_instance_0.{f}\" for f in field_names]\nfield_names_query = \",\".join(field_names_str)\n", "metadata": {"trusted": true, "tags": []}, "execution_count": 11, "outputs": []}, {"cell_type": "code", "source": "with open('field_names.txt', 'w') as file:\n    for item in field_names:\n        file.write(item + \"\\n\")\n", "metadata": {"trusted": true, "tags": []}, "execution_count": 14, "outputs": []}, {"cell_type": "code", "source": "!dx upload field_names.txt\n", "metadata": {"trusted": true, "tags": []}, "execution_count": 16, "outputs": [{"name": "stdout", "text": "[===========================================================>] Uploaded 17,748 of 17,748 bytes (100%) field_names.txt\nID                                file-J0GzzB0JFZ74jZpXyFZg6Gv6\nClass                             file\nProject                           project-GyY0jy0JFZ7740gQfB931g1f\nFolder                            /\nName                              field_names.txt\nState                             \u001b[33mclosing\u001b[0m\nVisibility                        visible\nTypes                             -\nProperties                        -\nTags                              -\nOutgoing links                    -\nCreated                           Tue May  6 12:25:12 2025\nCreated by                        angeline.lee_2023_ukb\n via the job                      job-J0GyzFQJFZ7KyQvyjPJFJ1xY\nLast modified                     Tue May  6 12:25:12 2025\nMedia type                        \narchivalState                     \"live\"\ncloudAccount                      \"cloudaccount-dnanexus\"\n", "output_type": "stream"}]}, {"cell_type": "code", "source": "", "metadata": {}, "execution_count": null, "outputs": []}]}
